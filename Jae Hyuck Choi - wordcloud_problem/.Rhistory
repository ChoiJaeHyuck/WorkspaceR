interactive = T )
# 기본 패키지 외에 설치된 패키지 사용 ( Library Load )
library( rJava )                      #엑셀파일을 읽고싶으면 반드시 이 두 library를 읽어야함
# 1. 분석 대상 데이터셋 준비
# Boston Housing 데이터셋 활용
install.packages("mlbench")
library( wordcloud )
library( wordcloud2 )
library( RColorBrewer )
library( dplyr )
library( ggplot2 )
library( KoNLP )     # R용 한글 자연어 처리 패키지
useNIADic()
setwd( "C:\Users\USER\Documents\GitHub\WorkspaceR\Jae Hyuck Choi - wordcloud_problem" )
setwd( "C:\\Users\\USER\Documents\\GitHub\WorkspaceR\\Jae Hyuck Choi - wordcloud_problem" )
setwd( "C:\\Users\\USER\\Documents\\GitHub\\WorkspaceR\\Jae Hyuck Choi - wordcloud_problem" )
text1 <- readLines( 'ex_10-1.txt', encoding = 'UTF-8' )   # 이렇게 했는데 한글이 깨지면, encoding = 'UTF-8'부분 빼기
text1
text2 <- readLines( 'ex_10-2.txt', encoding = 'UTF-8' )
text2
text3 <- readLines( 'ex_10-3.txt', encoding = 'UTF-8' )
text3
buildDictionary( ext_dic = 'woorimalsam' )
pal2 <- brewer.pal( 8, 'Dark2' )                              # 색상 팔레트 생성
noun1 <-  sapply( text1, extractNoun, USE.NAMES = F )
noun1
noun2 <-  sapply( text2, extractNoun, USE.NAMES = F )
noun2
noun3 <-  sapply( text3, extractNoun, USE.NAMES = F )
noun3
noun1
noun3 <-  sapply( text3, extractNoun, USE.NAMES = F )
noun3
noun1.1 <- unlist( noun1 )
wordcount1 <- table( noun1.1 )
noun2.1 <- unlist( noun2 )
wordcount2 <- table( noun2.1 )
noun3.1 <- unlist( noun3 )
wordcount3 <- table( noun3.1 )
sort.noun1 <- sort( wordcount1, decreasing = T)[ 1:10 ]
sort.noun1                                                       # 가장 많은 빈도수는 공백임
sort.noun1 <- sort.noun1[-1]
barplot( sort.noun1, names.arg = names( sort.noun1 ),
col = 'steelblue', main = '빈도수 높은 단어',
ylab = '단어 빈도수')
sort.noun2 <- sort( wordcount2, decreasing = T)[ 1:10 ]
sort.noun2                                                       # 가장 많은 빈도수는 공백임
sort.noun2 <- sort.noun2[-1]
barplot( sort.noun2, names.arg = names( sort.noun2 ),
col = 'steelblue', main = '빈도수 높은 단어',
ylab = '단어 빈도수')
sort.noun3 <- sort( wordcount3, decreasing = T)[ 1:10 ]
sort.noun3                                                       # 가장 많은 빈도수는 공백임
sort.noun3 <- sort.noun3[-1]
barplot( sort.noun3, names.arg = names( sort.noun3 ),
col = 'steelblue', main = '빈도수 높은 단어',
ylab = '단어 빈도수')
pal3 <- brewer.pal( 9, 'Blues' )[ 5:9 ]                   # 색상 팔레트 생성
wordcloud( names( wordcount1 ),                            # 단어
freq = wordcount1,                              # 단어 빈도
main.freq = 3,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
wordcloud( names( wordcount2 ),                            # 단어
freq = wordcount2,                              # 단어 빈도
main.freq = 3,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
wordcloud( names( wordcount3 ),                            # 단어
freq = wordcount3,                              # 단어 빈도
main.freq = 3,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
pal3 <- brewer.pal( 9, 'purple' )[ 5:9 ]                   # 색상 팔레트 생성
wordcloud( names( wordcount1 ),                            # 단어
freq = wordcount1,                              # 단어 빈도
main.freq = 3,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )                                # 단어색
wordcloud( names( wordcount2 ),                            # 단어
freq = wordcount2,                              # 단어 빈도
main.freq = 3,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
wordcloud( names( wordcount3 ),                            # 단어
freq = wordcount3,                              # 단어 빈도
main.freq = 3,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
pal3 <- brewer.pal( 9, 'purple' )[ 5:9 ]                   # 색상 팔레트 생성
wordcloud( names( wordcount1 ),                            # 단어
freq = wordcount1,                              # 단어 빈도
main.freq = 3,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
pal3 <- brewer.pal( 9, 'red' )[ 5:9 ]                   # 색상 팔레트 생성
pal3 <- brewer.pal( 9, 'Red' )[ 5:9 ]                   # 색상 팔레트 생성
pal3 <- brewer.pal( 9, 'Reds' )[ 5:9 ]                   # 색상 팔레트 생성
wordcloud( names( wordcount1 ),                            # 단어
freq = wordcount1,                              # 단어 빈도
main.freq = 3,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )                                # 단어색
wordcloud( names( wordcount2 ),                            # 단어
freq = wordcount2,                              # 단어 빈도
main.freq = 3,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
wordcloud( names( wordcount3 ),                            # 단어
freq = wordcount3,                              # 단어 빈도
main.freq = 3,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
pal3 <- brewer.pal( 9, 'Purples' )[ 5:9 ]
wordcloud( names( wordcount1 ),                            # 단어
freq = wordcount1,                              # 단어 빈도
main.freq = 3,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )                                # 단어색
wordcloud( names( wordcount2 ),                            # 단어
freq = wordcount2,                              # 단어 빈도
main.freq = 3,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
wordcloud( names( wordcount3 ),                            # 단어
freq = wordcount3,                              # 단어 빈도
main.freq = 3,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
wordcloud( names( wordcount1 ),                            # 단어
freq = wordcount1,                              # 단어 빈도
main.freq = 5,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )                                # 단어색
wordcloud( names( wordcount2 ),                            # 단어
freq = wordcount2,                              # 단어 빈도
main.freq = 5,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
wordcloud( names( wordcount3 ),                            # 단어
freq = wordcount3,                              # 단어 빈도
main.freq = 5,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
noun1 <- noun1[ nchar( noun1 ) > 1 ]
noun1 <- noun1[ nchar( noun1 ) > 1 ]
noun2 <- noun2[ nchar( noun2 ) > 1 ]
noun3 <- noun3[ nchar( noun3 ) > 1 ]
coun1<- table(noun1)
coun2<- table(noun2)
coun3<- table(noun3)
coun1<- table(noun1)
coun1<- table(noun1.1)
coun2<- table(noun2.1)
coun3<- table(noun3.1)
pal3 <- brewer.pal( 9, 'Purples' )[ 5:9 ]                   # 색상 팔레트 생성
wordcloud( names( wordcount1 ),                            # 단어
freq = wordcount1,                              # 단어 빈도
main.freq = 5,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )                                # 단어색
wordcloud( names( wordcount2 ),                            # 단어
freq = wordcount2,                              # 단어 빈도
main.freq = 5,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
wordcloud( names( wordcount3 ),                            # 단어
freq = wordcount3,                              # 단어 빈도
main.freq = 5,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
library( KoNLP )
useNIADic()
library( wordcloud )
library( wordcloud2 )
library( RColorBrewer )
library( dplyr )
library( ggplot2 )
setwd( "C:\\Users\\USER\\Documents\\GitHub\\WorkspaceR\\Jae Hyuck Choi - wordcloud_problem" )
text1 <- readLines( 'ex_10-1.txt', encoding = 'UTF-8' )
text1
text2 <- readLines( 'ex_10-2.txt', encoding = 'UTF-8' )
text2
text3 <- readLines( 'ex_10-3.txt', encoding = 'UTF-8' )
text3
buildDictionary( ext_dic = 'woorimalsam' )
pal2 <- brewer.pal( 8, 'Dark2' )
noun1 <-  sapply( text1, extractNoun, USE.NAMES = F )
noun1
noun2 <-  sapply( text2, extractNoun, USE.NAMES = F )
noun2
noun3 <-  sapply( text3, extractNoun, USE.NAMES = F )
noun3
noun1.1 <- unlist( noun1 )
wordcount1 <- table( noun1.1 )
noun2.1 <- unlist( noun2 )
wordcount2 <- table( noun2.1 )
noun3.1 <- unlist( noun3 )
wordcount3 <- table( noun3.1 )
sort.noun1 <- sort( wordcount1, decreasing = T)[ 1:10 ]
sort.noun1
barplot( sort.noun1, names.arg = names( sort.noun1 ),
col = 'steelblue', main = '빈도수 높은 단어',
ylab = '단어 빈도수')
sort.noun2 <- sort( wordcount2, decreasing = T)[ 1:10 ]
sort.noun2
sort.noun2 <- sort.noun2[-1]
barplot( sort.noun2, names.arg = names( sort.noun2 ),
col = 'steelblue', main = '빈도수 높은 단어',
ylab = '단어 빈도수')
sort.noun3 <- sort( wordcount3, decreasing = T)[ 1:10 ]
sort.noun3
sort.noun3 <- sort.noun3[-1]
barplot( sort.noun3, names.arg = names( sort.noun3 ),
col = 'steelblue', main = '빈도수 높은 단어',
ylab = '단어 빈도수')
noun1 <- noun1[ nchar( noun1 ) > 1 ]
noun2 <- noun2[ nchar( noun2 ) > 1 ]
noun3 <- noun3[ nchar( noun3 ) > 1 ]
coun1<- table(noun1.1)
coun2<- table(noun2.1)
coun3<- table(noun3.1)
pal3 <- brewer.pal( 9, 'Purples' )[ 5:9 ]                   # 색상 팔레트 생성
wordcloud( names( wordcount1 ),                            # 단어
freq = wordcount1,                              # 단어 빈도
main.freq = 5,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )                                # 단어색
wordcloud( names( wordcount2 ),                            # 단어
freq = wordcount2,                              # 단어 빈도
main.freq = 5,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
wordcloud( names( wordcount3 ),                            # 단어
freq = wordcount3,                              # 단어 빈도
main.freq = 5,                                 # 단어 폰트 크기(최대,최소)
random.order = F,                              # 단어 최소 빈도
rot.per = .1,                                  # 90도 회전 단어 비율
colors = pal3 )
noun3 <- noun3[ nchar( noun3 ) > 1 ]
library( KoNLP )
useNIADic()
library( wordcloud )
library( wordcloud2 )
library( RColorBrewer )
library( dplyr )
library( ggplot2 )
setwd( "C:\\Users\\USER\\Documents\\GitHub\\WorkspaceR\\Jae Hyuck Choi - wordcloud_problem" )
text1 <- readLines( 'ex_10-1.txt', encoding = 'UTF-8' )
text1
text2 <- readLines( 'ex_10-2.txt', encoding = 'UTF-8' )
text2
text3 <- readLines( 'ex_10-3.txt', encoding = 'UTF-8' )
text3
buildDictionary( ext_dic = 'woorimalsam' )
pal2 <- brewer.pal( 8, 'Dark2' )
buildDictionary( ext_dic = 'woorimalsam' )             # 한글 사전 우리말씀 로딩
pal2 <- brewer.pal( 8, 'Dark2' )
noun1 <-  sapply( text1, extractNoun, USE.NAMES = F )           # 명사 추출
noun1
noun2 <-  sapply( text2, extractNoun, USE.NAMES = F )
noun2
noun3 <-  sapply( text3, extractNoun, USE.NAMES = F )
noun3
noun1.1 <- unlist( noun1 )                                       # 추출한 명사의 빈도수 계산
wordcount1 <- table( noun1.1 )
noun2.1 <- unlist( noun2 )
wordcount2 <- table( noun2.1 )
noun3.1 <- unlist( noun3 )
wordcount3 <- table( noun3.1 )
sort.noun1 <- sort( wordcount1, decreasing = T)[ 1:10 ]          # 빈도수순으로 Sort( Descending )
sort.noun1
barplot( sort.noun1, names.arg = names( sort.noun1 ),
col = 'steelblue', main = '빈도수 높은 단어',
ylab = '단어 빈도수')
sort.noun2 <- sort( wordcount2, decreasing = T)[ 1:10 ]
sort.noun2
sort.noun2 <- sort.noun2[-1]
barplot( sort.noun2, names.arg = names( sort.noun2 ),
col = 'steelblue', main = '빈도수 높은 단어',
ylab = '단어 빈도수')
sort.noun3 <- sort( wordcount3, decreasing = T)[ 1:10 ]
sort.noun3
sort.noun3 <- sort.noun3[-1]
barplot( sort.noun3, names.arg = names( sort.noun3 ),
col = 'steelblue', main = '빈도수 높은 단어',
ylab = '단어 빈도수')
#한글 Word Cloud 작성
pal3 <- brewer.pal( 9, 'Purples' )[ 5:9 ]                   # 색상 팔레트 생성
wordcloud( names( wordcount1 ),                             # 단어
freq = wordcount1,                               # 단어 빈도
main.freq = 5,                                   # 단어 폰트 크기(최대,최소)
random.order = F,                                # 단어 최소 빈도
rot.per = .1,                                    # 90도 회전 단어 비율
colors = pal3 )                                  # 단어색
wordcloud( names( wordcount2 ),
freq = wordcount2,
main.freq = 5,
random.order = F,
rot.per = .1,
colors = pal3 )
wordcloud( names( wordcount3 ),
freq = wordcount3,
main.freq = 5,
random.order = F,
rot.per = .1,
colors = pal3 )
noun1.1 <- noun1.1[ nchar( noun1.1 ) > 1 ]
noun2.1 <- noun2.1[ nchar( noun2.1 ) > 1 ]
noun3.1 <- noun3.1[ nchar( noun3.1 ) > 1 ]
noun1.1 <- gsub( '하지','', noun1.1 )
noun1.1 <- gsub( '때문','', noun1.1 )
wordcount1 <- table( noun1.1 )
wordcount2 <- table( noun2.1 )
wordcount3 <- table( noun3.1 )
wordcloud( names( wordcount1 ), freq = wordcount1,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
wordcloud( names( wordcount2 ), freq = wordcount2,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
wordcloud( names( wordcount3 ), freq = wordcount3,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
noun1.1 <- gsub( '하지','', noun1.1 )
noun1.1 <- gsub( '때문','', noun1.1 )
noun2.1 <- gsub( '하지','', noun2.1 )
noun2.1 <- gsub( '때문','', noun2.1 )
noun3.1 <- gsub( '하지','', noun3.1 )
noun3.1 <- gsub( '때문','', noun3.1 )
wordcount1 <- table( noun1.1 )
wordcount2 <- table( noun2.1 )
wordcount3 <- table( noun3.1 )
wordcloud( names( wordcount1 ), freq = wordcount1,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
wordcloud( names( wordcount2 ), freq = wordcount2,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
wordcloud( names( wordcount3 ), freq = wordcount3,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
noun2.1 <- gsub( '들이','', noun2.1 )
noun2.1 <- gsub( '하기','', noun2.1 )
noun2.1 <- gsub( '경우','', noun2.1 )
noun3.1 <- gsub( '하면','', noun3.1 )
noun3.1 <- gsub( '이번','', noun3.1 )
noun3.1 <- gsub( '동안','', noun3.1 )
noun3.1 <- gsub( '병우','', noun3.1 )
wordcount1 <- table( noun1.1 )
wordcount2 <- table( noun2.1 )
wordcount3 <- table( noun3.1 )
wordcloud( names( wordcount1 ), freq = wordcount1,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
wordcloud( names( wordcount2 ), freq = wordcount2,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
wordcloud( names( wordcount3 ), freq = wordcount3,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
wordcloud( names( wordcount1 ), freq = wordcount1,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
wordcloud( names( wordcount2 ), freq = wordcount2,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
wordcloud( names( wordcount3 ), freq = wordcount3,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
library( KoNLP )
useNIADic()
library( wordcloud )
library( wordcloud2 )
library( RColorBrewer )
library( dplyr )
library( ggplot2 )
setwd( "C:\\Users\\USER\\Documents\\GitHub\\WorkspaceR\\Jae Hyuck Choi - wordcloud_problem" )
text1 <- readLines( 'ex_10-1.txt', encoding = 'UTF-8' )
text1
text2 <- readLines( 'ex_10-2.txt', encoding = 'UTF-8' )
text2
text3 <- readLines( 'ex_10-3.txt', encoding = 'UTF-8' )
text3
buildDictionary( ext_dic = 'woorimalsam' )             # 한글 사전 우리말씀 로딩
pal2 <- brewer.pal( 8, 'Dark2' )
noun1 <-  sapply( text1, extractNoun, USE.NAMES = F )           # 명사 추출
noun1
noun2 <-  sapply( text2, extractNoun, USE.NAMES = F )
noun2
noun3 <-  sapply( text3, extractNoun, USE.NAMES = F )
noun3
noun1.1 <- unlist( noun1 )                                       # 추출한 명사의 빈도수 계산
wordcount1 <- table( noun1.1 )
noun2.1 <- unlist( noun2 )
wordcount2 <- table( noun2.1 )
noun3.1 <- unlist( noun3 )
wordcount3 <- table( noun3.1 )
sort.noun1 <- sort( wordcount1, decreasing = T)[ 1:10 ]          # 빈도수순으로 Sort( Descending )
sort.noun1
barplot( sort.noun1, names.arg = names( sort.noun1 ),
col = 'steelblue', main = '빈도수 높은 단어',
ylab = '단어 빈도수')
sort.noun2 <- sort( wordcount2, decreasing = T)[ 1:10 ]
sort.noun2
sort.noun2 <- sort.noun2[-1]
barplot( sort.noun2, names.arg = names( sort.noun2 ),
col = 'steelblue', main = '빈도수 높은 단어',
ylab = '단어 빈도수')
sort.noun3 <- sort( wordcount3, decreasing = T)[ 1:10 ]
sort.noun3
sort.noun3 <- sort.noun3[-1]
barplot( sort.noun3, names.arg = names( sort.noun3 ),
col = 'steelblue', main = '빈도수 높은 단어',
ylab = '단어 빈도수')
#한글 Word Cloud 작성
pal3 <- brewer.pal( 9, 'Purples' )[ 5:9 ]                   # 색상 팔레트 생성
wordcloud( names( wordcount1 ),                             # 단어
freq = wordcount1,                               # 단어 빈도
main.freq = 5,                                   # 단어 폰트 크기(최대,최소)
random.order = F,                                # 단어 최소 빈도
rot.per = .1,                                    # 90도 회전 단어 비율
colors = pal3 )                                  # 단어색
wordcloud( names( wordcount2 ),
freq = wordcount2,
main.freq = 5,
random.order = F,
rot.per = .1,
colors = pal3 )
wordcloud( names( wordcount3 ),
freq = wordcount3,
main.freq = 5,
random.order = F,
rot.per = .1,
colors = pal3 )
noun1.1 <- noun1.1[ nchar( noun1.1 ) > 1 ]                    # 불필요한 단어 삭제
noun2.1 <- noun2.1[ nchar( noun2.1 ) > 1 ]
noun3.1 <- noun3.1[ nchar( noun3.1 ) > 1 ]
noun1.1 <- gsub( '들이','', noun1.1 )
noun1.1 <- gsub( '대한','', noun1.1 )
noun1.1 <- gsub( '그동안','', noun1.1 )
noun2.1 <- gsub( '들이','', noun2.1 )
noun2.1 <- gsub( '하기','', noun2.1 )
noun2.1 <- gsub( '경우','', noun2.1 )
noun3.1 <- gsub( '하면','', noun3.1 )
noun3.1 <- gsub( '이번','', noun3.1 )
noun3.1 <- gsub( '동안','', noun3.1 )
noun3.1 <- gsub( '병우','', noun3.1 )
wordcount1 <- table( noun1.1 )
wordcount2 <- table( noun2.1 )
wordcount3 <- table( noun3.1 )
wordcloud( names( wordcount1 ), freq = wordcount1,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
wordcloud( names( wordcount2 ), freq = wordcount2,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
wordcloud( names( wordcount3 ), freq = wordcount3,
scale = c( 6, 0.7 ), main.freq = 3,
random.order = F, rot.per = .1, colors = pal3 )
text4 <-  readLines('ex_10-4.txt', encoding = 'UTF-8')
text4
noun4 <- sapply(text4, extractNoun, USE.NAMES = F)
noun4
noun4 <- unlist(noun4)            #list <- vector로 변환
noun4 <- noun4[nchar(noun4)>1]
coun4<- table(noun4)
noun4.1 <- unlist(noun4)            #list <- vector로 변환
noun4.1 <- noun4.1[nchar(noun4.1)>1]
wordcount4<- table(noun4.1)
sort.noun4 <- sort(wordcount4, decreasing = T)[1:10]
sort.noun4
sort.noun4 <- sort.noun1[-3]            #3번째가 공백임
sort.noun4 <- sort.noun1[-11]            #3번째가 공백임
wordcloud2(wordcount4,
color = 'random-light',size = 1)
text5 <- readLines('ex_10-5.txt', encoding = 'UTF-8')
text5
noun5 <- sapply(text5, extractNoun, USE.NAMES = F)
noun5
noun5.1 <- unlist(noun5)            #list <- vector로 변환
noun5.1 <- unlist(noun5)            #list <- vector로 변환
noun5.1 <- noun5.1[nchar(noun5.1)>1]
noun5.1
wordcount5<- table(noun5.1)
sort.noun5 <- sort(wordcount5, decreasing = T)[1:10]
sort.noun5
wordcloud2(wordcount5,
color = 'random-light',size = 1.6, shape='star')
wordcloud2(wordcount5,
color = 'random-light',size = 1.6, shape='circle')
